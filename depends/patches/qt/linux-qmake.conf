#
# Generic qmake configuration for building with g++ for any target
#
# A minimal configure line could look something like this:
# ./configure -device bitcoin-linux-g++ -device-option TARGET_CC=arm-linux-gnueabi-gcc ...

MAKEFILE_GENERATOR      = UNIX
CONFIG                 += incremental
QMAKE_INCREMENTAL_STYLE = sublib

include(../../common/linux.conf)
include(../../common/gcc-base-unix.conf)
include(../../common/g++-unix.conf)

!load(device_config) {
    error(Could not successfully load device configuration)
}

# modifications to g++.conf
QMAKE_CC                = $${TARGET_CC}
QMAKE_CXX               = $${TARGET_CXX}
QMAKE_LINK              = $${TARGET_CXX}
QMAKE_LINK_SHLIB        = $${TARGET_CXX}

# modifications to linux.conf
QMAKE_AR                = $${TARGET_AR} cqs
QMAKE_RANLIB            = $${TARGET_RANLIB}
QMAKE_OBJCOPY           = $${TARGET_OBJCOPY}
QMAKE_NM                = $${TARGET_NM} -P
QMAKE_STRIP             = $${TARGET_STRIP}

QMAKE_CFLAGS       += $${TARGET_CFLAGS}
QMAKE_CXXFLAGS     += $${TARGET_CXXFLAGS}
QMAKE_LFLAGS       += $${TARGET_LDFLAGS}

load(qt_config)
