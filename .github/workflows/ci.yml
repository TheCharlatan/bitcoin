# Copyright (c) 2023 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

name: CI
on:
  # See: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request.
  pull_request:
  # See: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push.
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

concurrency:
  group: ${{ github.event_name != 'pull_request' && github.run_id || github.ref }}
  cancel-in-progress: true

env:
  CI_FAILFAST_TEST_LEAVE_DANGLING: 1  # GHA does not care about dangling processes and setting this variable avoids killing the CI script itself on error
  MAKEJOBS: '-j10'

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target: [
          'x86_64-linux-gnu',
          'aarch64-linux-gnu',
          'x86_64-apple-darwin',
          'arm64-apple-darwin',
          'x86_64-w64-mingw32'
        ]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Build Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          bsdmainutils \
          python3 \
          ccache \
          g++ \
          g++-aarch64-linux-gnu \
          g++-mingw-w64-x86-64-posix \
          binutils-aarch64-linux-gnu \
          clang \
          llvm \
          cmake

    - name: Cache depends
      uses: actions/cache@v3
      with:
        path: |
          depends/built
          depends/sources
          depends/work
          depends/SDKs
        key: ${{ runner.os }}-depends-${{ matrix.target }}-${{ hashFiles('depends/packages/*') }}

    - name: Get SDK
      if: contains(matrix.target, 'apple-darwin')
      run: |
        XCODE_VERSION=15.0
        XCODE_BUILD_ID=15A240d
        DEPENDS_DIR="$PWD/depends"
        mkdir -p "${DEPENDS_DIR}/SDKs" "${DEPENDS_DIR}/sdk-sources"
        SDK_URL="https://bitcoincore.org/depends-sources/sdks"
        OSX_SDK_BASENAME="Xcode-${XCODE_VERSION}-${XCODE_BUILD_ID}-extracted-SDK-with-libcxx-headers"
        if [ -n "$XCODE_VERSION" ] && [ ! -d "${DEPENDS_DIR}/SDKs/${OSX_SDK_BASENAME}" ]; then
          OSX_SDK_FILENAME="${OSX_SDK_BASENAME}.tar.gz"
          OSX_SDK_PATH="${DEPENDS_DIR}/sdk-sources/${OSX_SDK_FILENAME}"
          if [ ! -f "$OSX_SDK_PATH" ]; then
            ${CI_RETRY_EXE} curl --location --fail "${SDK_URL}/${OSX_SDK_FILENAME}" -o "$OSX_SDK_PATH"
          fi
          tar -C "${DEPENDS_DIR}/SDKs" -xf "$OSX_SDK_PATH"
        fi

    - name: Build depends
      run: |
        make -C depends NO_QT=1 NO_QR=1 NO_ZMQ=1 NO_WALLET=1 NO_USDT=1 HOST=${{ matrix.target }} -j$(nproc)

    - name: Configure Bitcoin Core
      run: |
        cmake -B build_${{ matrix.target }} -DCMAKE_TOOLCHAIN_FILE=$PWD/depends/${{ matrix.target }}/toolchain.cmake -DBUILD_KERNEL_LIB=ON -DBUILD_BENCH=OFF -DBUILD_DAEMON=OFF -DBUILD_FUZZ_BINARY=OFF -DBUILD_TESTS=OFF -DBUILD_TX=OFF -DBUILD_UTIL=OFF -DBUILD_UTIL_CHAINSTATE=OFF -DBUILD_WALLET_TOOL=OFF -DENABLE_WALLET=OFF

    - name: Build Bitcoin Kernel
      run: |
        cmake --build build_${{ matrix.target }} --target bitcoinkernel --parallel

    - name: Package Library
      run: |
        cmake --install build_${{ matrix.target }} --component Kernel --prefix=bitcoinkernel_${{ matrix.target }}
        tar -czf bitcoinkernel-${{ matrix.target }}.tar.gz bitcoinkernel_${{ matrix.target }}

    - name: Upload Binary
      uses: actions/upload-artifact@v3
      with:
        name: bitcoinkernel-${{ matrix.target }}
        path: bitcoinkernel-${{ matrix.target }}.tar.gz
        compression-level: 0
        if-no-files-found: error
